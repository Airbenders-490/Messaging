// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	cassandra "chat/messaging/repository/cassandra"

	mock "github.com/stretchr/testify/mock"
)

// SessionInterface is an autogenerated mock type for the SessionInterface type
type SessionInterface struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *SessionInterface) Close() {
	_m.Called()
}

// ExecuteBatch provides a mock function with given fields: batch
func (_m *SessionInterface) ExecuteBatch(batch cassandra.BatchInterface) error {
	ret := _m.Called(batch)

	var r0 error
	if rf, ok := ret.Get(0).(func(cassandra.BatchInterface) error); ok {
		r0 = rf(batch)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewBatch provides a mock function with given fields: kind
func (_m *SessionInterface) NewBatch(kind cassandra.BatchKind) cassandra.BatchInterface {
	ret := _m.Called(kind)

	var r0 cassandra.BatchInterface
	if rf, ok := ret.Get(0).(func(cassandra.BatchKind) cassandra.BatchInterface); ok {
		r0 = rf(kind)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cassandra.BatchInterface)
		}
	}

	return r0
}

// Query provides a mock function with given fields: _a0, _a1
func (_m *SessionInterface) Query(_a0 string, _a1 ...interface{}) cassandra.QueryInterface {
	var _ca []interface{}
	_ca = append(_ca, _a0)
	_ca = append(_ca, _a1...)
	ret := _m.Called(_ca...)

	var r0 cassandra.QueryInterface
	if rf, ok := ret.Get(0).(func(string, ...interface{}) cassandra.QueryInterface); ok {
		r0 = rf(_a0, _a1...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cassandra.QueryInterface)
		}
	}

	return r0
}
